class Master():
    def __init__(self):
        self.kong_fu = '[古法煎饼果子配方]'
    def make_cake(self):
        print(f'运用{self.kong_fu}制作煎饼果子')
class School(Master):
    def __init__(self):
        self.kong_fu = '[黑马煎饼果子配方]'
    def make_cake(self):
        print(f'运用{self.kong_fu}制作煎饼果子')
        # 2.1
        #sper(School, self).__init__()
        #super(School, self).make_cake()
        #2.2
        super().__init__()
        super().make_cake()

class Prentice(School):
    def __init__(self):
        self.kong_fu = '[全新黑马古法煎饼果子】'

    def make_cake(self):
        self.__init__()
        print(f'运用{self.kong_fu}制作煎饼果子')
    # 子类调用父类同名方法时要对父类方法属性重新封装
    def make_master_cake(self):
        # 即父类名.函数名（）
        #2.1
        #super(Prentice, self).__init__()
        #super(Prentice,self).make_cake()
        #2.2
        super().__init__()
        super().make_cake()

daqiu = Prentice()
daqiu.make_cake()
daqiu.make_master_cake()
